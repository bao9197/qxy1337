// Code generated by hertz generator.

package demoapi

import (
	"context"

	demoapi "douyin/cmd/api/biz/model/demoapi"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// GetFeedList .
// @router /feed/ [GET]
func GetFeedList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinFeedRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinFeedResponse)

	c.JSON(consts.StatusOK, resp)
}

// FavoriteAction .
// @router /favorite/action/ [POST]
func FavoriteAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinFavoriteActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinFavoriteActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentAction .
// @router /comment/action/ [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinCommentActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinCommentActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetCommentList .
// @router /comment/list/ [GET]
func GetCommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinCommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinCommentListResponse)

	c.JSON(consts.StatusOK, resp)
}

// UserRegister .
// @router /user/register/ [POST]
func UserRegister(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinUserRegisterRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinUserRegisterResponse)

	c.JSON(consts.StatusOK, resp)
}

// UserLogin .
// @router /user/login/ [POST]
func UserLogin(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinUserLoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinUserLoginResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetUserInfo .
// @router /user/ [GET]
func GetUserInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinUserLoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinUserResponse)

	c.JSON(consts.StatusOK, resp)
}

// PublishAction .
// @router /publish/action/ [POST]
func PublishAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinPublishActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinPublishActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetPublishList .
// @router /publish/list/ [GET]
func GetPublishList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinPublishListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinPublishListResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetFavoriteList .
// @router /favorite/list/ [GET]
func GetFavoriteList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demoapi.DouyinFavoriteListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demoapi.DouyinFavoriteListResponse)

	c.JSON(consts.StatusOK, resp)
}
